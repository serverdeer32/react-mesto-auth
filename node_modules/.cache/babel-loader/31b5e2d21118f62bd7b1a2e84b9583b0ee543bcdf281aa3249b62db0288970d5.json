{"ast":null,"code":"export const baseUrl = \"https://auth.nomoreparties.co\";\nfunction getResponseData(res) {\n  return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`);\n}\nexport function register(password, email) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => getResponseData(res));\n}\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse).catch(err => console.error(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json()).catch(err => console.error(err));\n};","map":{"version":3,"names":["baseUrl","getResponseData","res","ok","json","Promise","reject","status","statusText","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","BASE_URL","Accept","checkResponse","catch","err","console","error","getContent","token","Authorization"],"sources":["/Users/alexey/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const baseUrl = \"https://auth.nomoreparties.co\";\n\nfunction getResponseData(res) {\n  return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\n}\n\nexport function register(password, email) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    })\n  })\n  .then(res => getResponseData(res))\n}\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse)\n  .catch(err => console.error(err))\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json())\n  .catch(err => console.error(err))\n};\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,+BAA+B;AAEtD,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC5B,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,GAAEJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;AAChF;AAEA,OAAO,SAASC,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACxC,OAAOC,KAAK,CAAE,GAAEZ,OAAQ,SAAQ,EAAE;IAChCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CACDO,IAAI,CAAChB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACpC;AAEA,OAAO,MAAMiB,SAAS,GAAGA,CAACR,KAAK,EAAED,QAAQ,KAAK;EAC5C,OAAOE,KAAK,CAAE,GAAEQ,QAAS,SAAQ,EAAE;IACjCP,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPO,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAED;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACQ,IAAI,CAACI,aAAa,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOhB,KAAK,CAAE,GAAEQ,QAAS,WAAU,EAAE;IACnCP,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPO,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CAACV,IAAI,CAAEhB,GAAG,IAAKA,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAC3BmB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}