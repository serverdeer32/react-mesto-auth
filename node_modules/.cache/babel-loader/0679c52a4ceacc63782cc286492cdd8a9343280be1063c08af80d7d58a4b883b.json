{"ast":null,"code":"class Api {\n  constructor(data) {\n    this._url = data.baseUrl;\n    this._headers = data.headers;\n    this._auth = data.headers.authorization;\n  }\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n    ;\n  }\n  getInfo() {\n    return fetch(`${this._url}users/me`, {\n      headers: {\n        authorization: this._auth\n      }\n    }).then(this._getResponse).catch(err => console.error(err));\n  }\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      headers: {\n        authorization: this._auth\n      }\n    }).then(this._getResponse);\n  }\n  setUserInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.username,\n        about: data.description\n      })\n    }).then(this._getResponse);\n  }\n  setAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getResponse);\n  }\n  addCard(cardData) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData.name,\n        link: cardData.link\n      })\n    }).then(this._getResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._url}cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._auth\n      }\n    }).then(this._getResponse);\n  }\n  removeLike(cardId) {\n    return fetch(`${this._url}cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._auth\n      }\n    }).then(this._getResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._auth\n      }\n    }).then(this._getResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-74/',\n  headers: {\n    authorization: '2df54e82-a7fc-4317-91ae-bd7672a9b070',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","data","_url","baseUrl","_headers","headers","_auth","authorization","_getResponse","res","ok","json","Promise","reject","status","getInfo","fetch","then","catch","err","console","error","getInitialCards","setUserInfo","method","body","JSON","stringify","name","username","about","description","setAvatar","avatar","addCard","cardData","link","addLike","cardId","removeLike","deleteCard","api"],"sources":["/Users/alexey/Desktop/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(data) {\n    this._url = data.baseUrl;\n    this._headers = data.headers;\n    this._auth = data.headers.authorization;\n  }\n\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);;\n  }\n\n  getInfo() {\n    return fetch(`${this._url}users/me`, {\n      headers: {\n        authorization: this._auth\n      }\n    })\n    .then(this._getResponse)\n    .catch(err => console.error(err))\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      headers: {\n        authorization: this._auth\n      }\n    })\n    .then(this._getResponse)\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.username,\n        about: data.description\n      })\n    })\n    .then(this._getResponse)\n  }\n\n  setAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      })\n    })\n    .then(this._getResponse)\n  }\n\n  addCard(cardData) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData.name,\n        link: cardData.link\n      })\n    })\n    .then(this._getResponse)\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._url}cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._auth\n      }\n    })\n    .then(this._getResponse)\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._url}cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._auth\n      }\n    })\n    .then(this._getResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._auth\n      }\n    })\n    .then(this._getResponse)\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-74/',\n  headers: {\n    authorization: '2df54e82-a7fc-4317-91ae-bd7672a9b070',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}