{"ast":null,"code":"export var baseUrl=\"https://auth.nomoreparties.co\";function getResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));;}export function register(email,password){return fetch(\"\".concat(baseUrl,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){return getResponse(res);});}export function authorize(email,password){return fetch(\"\".concat(baseUrl,\"/signin\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(function(res){return getResponse(res);});}export function getContent(token){return fetch(\"\".concat(baseUrl,\"/users/me\"),{method:'GET',headers:{'Content-Type':'application/json',\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){return getResponse(res);});}","map":{"version":3,"names":["baseUrl","getResponse","res","ok","json","Promise","reject","concat","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","Accept","getContent","token"],"sources":["/Users/alexey/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const baseUrl = \"https://auth.nomoreparties.co\";\n\nfunction getResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);;\n}\n\nexport function register(email, password) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    })\n  })\n    .then(res => getResponse(res))\n}\n\nexport function authorize(email, password) {\n  return fetch(`${baseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    })\n  })\n    .then(res => getResponse(res))\n}\n\nexport function getContent(token) {\n  return fetch(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  })\n    .then(res => getResponse(res))\n}"],"mappings":"AAAA,MAAO,IAAM,CAAAA,OAAO,CAAG,+BAA+B,CAEtD,QAAS,CAAAC,WAAWA,CAACC,GAAG,CAAE,CACxB,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,CAAE,CAAC,CAAC,CACjD,CAEA,MAAO,SAAS,CAAAC,QAAQA,CAACC,KAAK,CAAEC,QAAQ,CAAE,CACxC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,OAAO,YAAW,CAChCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBN,QAAQ,CAAEA,QAAQ,CAClBD,KAAK,CAAEA,KACT,CAAC,CACH,CAAC,CAAC,CACCQ,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,WAAW,CAACC,GAAG,CAAC,GAAC,CAClC,CAEA,MAAO,SAAS,CAAAiB,SAASA,CAACT,KAAK,CAAEC,QAAQ,CAAE,CACzC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,OAAO,YAAW,CAChCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPM,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDL,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBN,QAAQ,CAAEA,QAAQ,CAClBD,KAAK,CAAEA,KACT,CAAC,CACH,CAAC,CAAC,CACCQ,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,WAAW,CAACC,GAAG,CAAC,GAAC,CAClC,CAEA,MAAO,SAAS,CAAAmB,UAAUA,CAACC,KAAK,CAAE,CAChC,MAAO,CAAAV,KAAK,IAAAL,MAAA,CAAIP,OAAO,cAAa,CAClCa,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAP,MAAA,CAAYe,KAAK,CAClC,CACF,CAAC,CAAC,CACCJ,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,WAAW,CAACC,GAAG,CAAC,GAAC,CAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}