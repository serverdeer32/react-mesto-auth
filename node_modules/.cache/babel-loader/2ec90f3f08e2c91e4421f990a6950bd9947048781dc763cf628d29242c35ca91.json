{"ast":null,"code":"var _jsxFileName = \"/Users/alexey/Desktop/dev/mesto-react/src/components/AddPlacePopup/AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport useFormValidation from \"../../utils/useFormValidation\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPlacePopup({\n  isOpen,\n  onClose,\n  onAddPlace,\n  isSend\n}) {\n  _s();\n  const {\n    values,\n    errors,\n    isValid,\n    isInputValid,\n    handleChange,\n    resetValidation\n  } = useFormValidation();\n  function resetAfterClose() {\n    onClose();\n    resetValidation({\n      username: currentUser.name,\n      description: currentUser.about\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"add_card\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    buttonTitle: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: resetAfterClose,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__input-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: \"\",\n        minLength: 2,\n        maxLength: 30,\n        className: \"popup__input popup__input_card-name\",\n        id: \"card-name\",\n        name: \"name\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        type: \"text\",\n        value: values.name ? values.username : '',\n        onChange: handleChange,\n        disabled: isSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"card-name-error\",\n        className: \"popup__error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__input-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: \"\",\n        type: \"url\",\n        className: \"popup__input popup__input_card-link\",\n        id: \"card-link\",\n        name: \"link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"card-link-error\",\n        className: \"popup__error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlacePopup, \"+30eUeMHRW3aq/Vl844bOJfhMzY=\", false, function () {\n  return [useFormValidation];\n});\n_c = AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["useFormValidation","PopupWithForm","jsxDEV","_jsxDEV","AddPlacePopup","isOpen","onClose","onAddPlace","isSend","_s","values","errors","isValid","isInputValid","handleChange","resetValidation","resetAfterClose","username","currentUser","name","description","about","title","buttonTitle","children","className","required","minLength","maxLength","id","placeholder","type","value","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexey/Desktop/dev/mesto-react/src/components/AddPlacePopup/AddPlacePopup.js"],"sourcesContent":["import useFormValidation from \"../../utils/useFormValidation\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\n\nexport default function AddPlacePopup({ isOpen, onClose, onAddPlace, isSend }) {\n\n  const { values, errors, isValid, isInputValid, handleChange, resetValidation } = useFormValidation();\n\n\n  function resetAfterClose() {\n    onClose()\n    resetValidation({ username: currentUser.name, description: currentUser.about })\n  }\n\n  return (\n    <PopupWithForm\n        name='add_card'\n        title='Новое место'\n        buttonTitle='Создать'\n        isOpen={isOpen}\n        onClose={resetAfterClose}\n      >\n        <label className=\"popup__input-label\">\n          <input\n            required=\"\"\n            minLength={2}\n            maxLength={30}\n            className=\"popup__input popup__input_card-name\"\n            id=\"card-name\"\n            name=\"name\"\n            placeholder=\"Название\"\n            type=\"text\"\n            value={values.name ? values.username : ''}\n            onChange={handleChange}\n            disabled={isSend}\n          />\n          <span id=\"card-name-error\" className=\"popup__error\" />\n        </label>\n        <label className=\"popup__input-label\">\n          <input\n            required=\"\"\n            type=\"url\"\n            className=\"popup__input popup__input_card-link\"\n            id=\"card-link\"\n            name=\"link\"\n            placeholder=\"Ссылка на картинку\"\n          />\n          <span id=\"card-link-error\" className=\"popup__error\" />\n        </label>\n      </PopupWithForm>\n    )\n}"],"mappings":";;AAAA,OAAOA,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,aAAaA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAE7E,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,YAAY;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGf,iBAAiB,CAAC,CAAC;EAGpG,SAASgB,eAAeA,CAAA,EAAG;IACzBV,OAAO,CAAC,CAAC;IACTS,eAAe,CAAC;MAAEE,QAAQ,EAAEC,WAAW,CAACC,IAAI;MAAEC,WAAW,EAAEF,WAAW,CAACG;IAAM,CAAC,CAAC;EACjF;EAEA,oBACElB,OAAA,CAACF,aAAa;IACVkB,IAAI,EAAC,UAAU;IACfG,KAAK,EAAC,+DAAa;IACnBC,WAAW,EAAC,4CAAS;IACrBlB,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEU,eAAgB;IAAAQ,QAAA,gBAEzBrB,OAAA;MAAOsB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBACnCrB,OAAA;QACEuB,QAAQ,EAAC,EAAE;QACXC,SAAS,EAAE,CAAE;QACbC,SAAS,EAAE,EAAG;QACdH,SAAS,EAAC,qCAAqC;QAC/CI,EAAE,EAAC,WAAW;QACdV,IAAI,EAAC,MAAM;QACXW,WAAW,EAAC,kDAAU;QACtBC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,MAAM,CAACS,IAAI,GAAGT,MAAM,CAACO,QAAQ,GAAG,EAAG;QAC1CgB,QAAQ,EAAEnB,YAAa;QACvBoB,QAAQ,EAAE1B;MAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACFnC,OAAA;QAAM0B,EAAE,EAAC,iBAAiB;QAACJ,SAAS,EAAC;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACRnC,OAAA;MAAOsB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBACnCrB,OAAA;QACEuB,QAAQ,EAAC,EAAE;QACXK,IAAI,EAAC,KAAK;QACVN,SAAS,EAAC,qCAAqC;QAC/CI,EAAE,EAAC,WAAW;QACdV,IAAI,EAAC,MAAM;QACXW,WAAW,EAAC;MAAoB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFnC,OAAA;QAAM0B,EAAE,EAAC,iBAAiB;QAACJ,SAAS,EAAC;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEtB;AAAC7B,EAAA,CA/CuBL,aAAa;EAAA,QAE8CJ,iBAAiB;AAAA;AAAAuC,EAAA,GAF5EnC,aAAa;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}