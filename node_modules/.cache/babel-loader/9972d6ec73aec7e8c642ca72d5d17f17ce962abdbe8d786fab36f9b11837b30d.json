{"ast":null,"code":"export const baseUrl = \"https://auth.nomoreparties.co\";\nfunction getResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n  ;\n}\nexport function register(password, email) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => getResponse(res));\n}\nexport function authorize(email, password) {\n  return fetch(`${baseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => getResponse(res));\n}\nexport function getContent(token) {\n  return fetch(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => getResponse(res));\n}","map":{"version":3,"names":["baseUrl","getResponse","res","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","Accept","getContent","token"],"sources":["/Users/alexey/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const baseUrl = \"https://auth.nomoreparties.co\";\n\nfunction getResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);;\n}\n\nexport function register(password, email) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    })\n  })\n    .then(res => getResponse(res))\n}\n\nexport function authorize(email, password) {\n  return fetch(`${baseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    })\n  })\n    .then(res => getResponse(res))\n}\n\nexport function getContent(token) {\n  return fetch(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  })\n    .then(res => getResponse(res))\n}"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,+BAA+B;AAEtD,SAASC,WAAWA,CAACC,GAAG,EAAE;EACxB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAAC;AACjD;AAEA,OAAO,SAASC,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACxC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CACCO,IAAI,CAACf,GAAG,IAAID,WAAW,CAACC,GAAG,CAAC,CAAC;AAClC;AAEA,OAAO,SAASgB,SAASA,CAACR,KAAK,EAAED,QAAQ,EAAE;EACzC,OAAOE,KAAK,CAAE,GAAEX,OAAQ,SAAQ,EAAE;IAChCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPM,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDL,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CACCO,IAAI,CAACf,GAAG,IAAID,WAAW,CAACC,GAAG,CAAC,CAAC;AAClC;AAEA,OAAO,SAASkB,UAAUA,CAACC,KAAK,EAAE;EAChC,OAAOV,KAAK,CAAE,GAAEX,OAAQ,WAAU,EAAE;IAClCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASQ,KAAM;IACnC;EACF,CAAC,CAAC,CACCJ,IAAI,CAACf,GAAG,IAAID,WAAW,CAACC,GAAG,CAAC,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}