{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse).catch(err => console.error(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse).catch(err => console.error(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json()).catch(err => console.error(err));\n};\nconst checkResponse = response => {\n  if (response.ok) {\n    return response.json();\n  }\n  return response.json().then(res => {\n    throw res.message[0].messages[0].message;\n  });\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","Accept","body","JSON","stringify","then","checkResponse","catch","err","console","error","authorize","getContent","token","Authorization","res","json","response","ok","message","messages"],"sources":["/Users/alexey/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password,\n      email,\n    }),\n  }).then(checkResponse)\n  .catch(err => console.error(err))\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse)\n  .catch(err => console.error(err))\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json())\n  .catch(err => console.error(err))\n};\n\nconst checkResponse = (response) => {\n  if (response.ok) {\n    return response.json();\n  }\n\n  return response.json().then((res) => {\n    throw res.message[0].messages[0].message;\n  });\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBR,QAAQ;MACRC;IACF,CAAC;EACH,CAAC,CAAC,CAACQ,IAAI,CAACC,aAAa,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGA,CAACd,KAAK,EAAED,QAAQ,KAAK;EAC5C,OAAOE,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAED;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACS,IAAI,CAACC,aAAa,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOf,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCa,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CAACR,IAAI,CAAEU,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BT,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,MAAMF,aAAa,GAAIW,QAAQ,IAAK;EAClC,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACf,OAAOD,QAAQ,CAACD,IAAI,CAAC,CAAC;EACxB;EAEA,OAAOC,QAAQ,CAACD,IAAI,CAAC,CAAC,CAACX,IAAI,CAAEU,GAAG,IAAK;IACnC,MAAMA,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACD,OAAO;EAC1C,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}